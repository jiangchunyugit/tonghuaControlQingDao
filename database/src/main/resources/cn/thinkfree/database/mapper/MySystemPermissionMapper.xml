<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.thinkfree.database.mapper.SystemPermissionMapper">
  <resultMap id="PermissionVO" type="cn.thinkfree.database.vo.account.PermissionVO" extends="BaseResultMap">
    <result column="creatorName"  property="creatorName" />
    <result column="resources" property="resources"  />
    <result column="isGrant" property="isGrant" />
  </resultMap>

  <sql id="MyColumnList" >
    ${alias}.id,
    ${alias}.name,
    ${alias}.code,
    ${alias}.desc,
    ${alias}.create_time,
    ${alias}.creator,
    ${alias}.is_sys,
    ${alias}.is_enable,
    ${alias}.is_del
  </sql>

  <sql id="MyExampleWhereClause">

    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and  ${alias}.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${alias}.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${alias}.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${alias}.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectPermissionVO" parameterType="cn.thinkfree.database.model.SystemPermissionExample" resultMap="PermissionVO">
    select
    <if test="distinct">
      distinct
    </if>
     pc_user_info.name as creatorName,
    (select
        array_to_string(array(
                              SELECT
                                  resource.name
                              FROM pc_system_resource resource
                              join pc_system_permission_resource pr
                              on resource.id = pr.resource_id
                              and pr.permission_id = pc_system_permission.ID
                          ),','
        )
     ) as resources,
    <include refid="MyColumnList">
      <property name="alias" value="pc_system_permission"/>
    </include>
    from pc_system_permission pc_system_permission
    left join pc_user_info pc_user_info on pc_system_permission.creator = pc_user_info.id
    <if test="_parameter != null">
      <include refid="MyExampleWhereClause" >
        <property name="alias" value="pc_system_permission"/>
      </include>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <select id="selectPermissionVOByID" parameterType="java.lang.Integer" resultMap="PermissionVO">
    select
    pc_user_info.name as creatorName,
    <include refid="MyColumnList">
      <property name="alias" value="pc_system_permission"/>
    </include>
    from pc_system_permission pc_system_permission
    left join pc_user_info pc_user_info on pc_system_permission.creator = pc_user_info.id
    where pc_system_permission.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectPermissionForGrant" parameterType="java.lang.Integer" resultMap="PermissionVO">
      SELECT
      decode(pc_system_role_permission.id,null,0,1) as isGrant,
      <include refid="MyColumnList">
        <property name="alias" value="pc_system_permission"/>
      </include>
      FROM pc_system_permission  pc_system_permission
      LEFT OUTER JOIN pc_system_role_permission pc_system_role_permission
      on  pc_system_permission.id = pc_system_role_permission.permission_id
      and pc_system_role_permission.role_id = #{id}

  </select>
  <select id="selectEffectivePermission"     resultMap="BaseResultMap">
    select
    <include refid="MyColumnList">
      <property name="alias" value="pc_system_permission"/>
    </include>
    FROM
    pc_system_permission pc_system_permission
    join pc_system_role_permission pc_system_role_permission
    on pc_system_permission.id= pc_system_role_permission.permission_id
    WHERE pc_system_role_permission.role_id = #{roleID}
    and pc_system_permission.is_del=0
    and pc_system_permission.is_enable = 1

  </select>

</mapper>