<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.thinkfree.database.mapper.ApprovalFlowNodeMapper">
  <resultMap id="BaseResultMap" type="cn.thinkfree.database.model.ApprovalFlowNode">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="config_log_num" jdbcType="VARCHAR" property="configLogNum" />
    <result column="is_effective" jdbcType="INTEGER" property="isEffective" />
    <result column="is_entrust" jdbcType="INTEGER" property="isEntrust" />
    <result column="node_explain" jdbcType="VARCHAR" property="nodeExplain" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="send_msg" jdbcType="VARCHAR" property="sendMsg" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="task_authority_id" jdbcType="VARCHAR" property="taskAuthorityId" />
    <result column="trigger_mode" jdbcType="INTEGER" property="triggerMode" />
    <result column="is_send_push_msg" jdbcType="INTEGER" property="isSendPushMsg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, config_log_num, is_effective, is_entrust, node_explain, node_name, num, send_msg, 
    sort, task_authority_id, trigger_mode, is_send_push_msg
  </sql>
  <select id="selectByExample" parameterType="cn.thinkfree.database.model.ApprovalFlowNodeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from approval_flow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from approval_flow_node
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approval_flow_node
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.thinkfree.database.model.ApprovalFlowNodeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approval_flow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.thinkfree.database.model.ApprovalFlowNode">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approval_flow_node (id, config_log_num, is_effective, 
      is_entrust, node_explain, node_name, 
      num, send_msg, sort, 
      task_authority_id, trigger_mode, is_send_push_msg
      )
    values (#{id,jdbcType=INTEGER}, #{configLogNum,jdbcType=VARCHAR}, #{isEffective,jdbcType=INTEGER}, 
      #{isEntrust,jdbcType=INTEGER}, #{nodeExplain,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, 
      #{num,jdbcType=VARCHAR}, #{sendMsg,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{taskAuthorityId,jdbcType=VARCHAR}, #{triggerMode,jdbcType=INTEGER}, #{isSendPushMsg,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.thinkfree.database.model.ApprovalFlowNode">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approval_flow_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="configLogNum != null">
        config_log_num,
      </if>
      <if test="isEffective != null">
        is_effective,
      </if>
      <if test="isEntrust != null">
        is_entrust,
      </if>
      <if test="nodeExplain != null">
        node_explain,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="sendMsg != null">
        send_msg,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="taskAuthorityId != null">
        task_authority_id,
      </if>
      <if test="triggerMode != null">
        trigger_mode,
      </if>
      <if test="isSendPushMsg != null">
        is_send_push_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configLogNum != null">
        #{configLogNum,jdbcType=VARCHAR},
      </if>
      <if test="isEffective != null">
        #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="isEntrust != null">
        #{isEntrust,jdbcType=INTEGER},
      </if>
      <if test="nodeExplain != null">
        #{nodeExplain,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="sendMsg != null">
        #{sendMsg,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="taskAuthorityId != null">
        #{taskAuthorityId,jdbcType=VARCHAR},
      </if>
      <if test="triggerMode != null">
        #{triggerMode,jdbcType=INTEGER},
      </if>
      <if test="isSendPushMsg != null">
        #{isSendPushMsg,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.thinkfree.database.model.ApprovalFlowNodeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from approval_flow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_flow_node
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configLogNum != null">
        config_log_num = #{record.configLogNum,jdbcType=VARCHAR},
      </if>
      <if test="record.isEffective != null">
        is_effective = #{record.isEffective,jdbcType=INTEGER},
      </if>
      <if test="record.isEntrust != null">
        is_entrust = #{record.isEntrust,jdbcType=INTEGER},
      </if>
      <if test="record.nodeExplain != null">
        node_explain = #{record.nodeExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.sendMsg != null">
        send_msg = #{record.sendMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.taskAuthorityId != null">
        task_authority_id = #{record.taskAuthorityId,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerMode != null">
        trigger_mode = #{record.triggerMode,jdbcType=INTEGER},
      </if>
      <if test="record.isSendPushMsg != null">
        is_send_push_msg = #{record.isSendPushMsg,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_flow_node
    set id = #{record.id,jdbcType=INTEGER},
      config_log_num = #{record.configLogNum,jdbcType=VARCHAR},
      is_effective = #{record.isEffective,jdbcType=INTEGER},
      is_entrust = #{record.isEntrust,jdbcType=INTEGER},
      node_explain = #{record.nodeExplain,jdbcType=VARCHAR},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=VARCHAR},
      send_msg = #{record.sendMsg,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      task_authority_id = #{record.taskAuthorityId,jdbcType=VARCHAR},
      trigger_mode = #{record.triggerMode,jdbcType=INTEGER},
      is_send_push_msg = #{record.isSendPushMsg,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.thinkfree.database.model.ApprovalFlowNode">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_flow_node
    <set>
      <if test="configLogNum != null">
        config_log_num = #{configLogNum,jdbcType=VARCHAR},
      </if>
      <if test="isEffective != null">
        is_effective = #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="isEntrust != null">
        is_entrust = #{isEntrust,jdbcType=INTEGER},
      </if>
      <if test="nodeExplain != null">
        node_explain = #{nodeExplain,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="sendMsg != null">
        send_msg = #{sendMsg,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="taskAuthorityId != null">
        task_authority_id = #{taskAuthorityId,jdbcType=VARCHAR},
      </if>
      <if test="triggerMode != null">
        trigger_mode = #{triggerMode,jdbcType=INTEGER},
      </if>
      <if test="isSendPushMsg != null">
        is_send_push_msg = #{isSendPushMsg,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.thinkfree.database.model.ApprovalFlowNode">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_flow_node
    set config_log_num = #{configLogNum,jdbcType=VARCHAR},
      is_effective = #{isEffective,jdbcType=INTEGER},
      is_entrust = #{isEntrust,jdbcType=INTEGER},
      node_explain = #{nodeExplain,jdbcType=VARCHAR},
      node_name = #{nodeName,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      send_msg = #{sendMsg,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      task_authority_id = #{taskAuthorityId,jdbcType=VARCHAR},
      trigger_mode = #{triggerMode,jdbcType=INTEGER},
      is_send_push_msg = #{isSendPushMsg,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>