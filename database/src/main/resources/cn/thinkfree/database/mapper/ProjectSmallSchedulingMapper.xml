<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.thinkfree.database.mapper.ProjectSmallSchedulingMapper">
  <resultMap id="BaseResultMap" type="cn.thinkfree.database.model.ProjectSmallScheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="construct_category" jdbcType="VARCHAR" property="constructCategory" />
    <result column="construct_item" jdbcType="VARCHAR" property="constructItem" />
    <result column="construct_code" jdbcType="VARCHAR" property="constructCode" />
    <result column="construct_name" jdbcType="VARCHAR" property="constructName" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="parent_sort" jdbcType="INTEGER" property="parentSort" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="assit_spec" jdbcType="VARCHAR" property="assitSpec" />
    <result column="standard" jdbcType="VARCHAR" property="standard" />
    <result column="source_of_standard" jdbcType="VARCHAR" property="sourceOfStandard" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="predecessor_small_sort" jdbcType="INTEGER" property="predecessorSmallSort" />
    <result column="construct_id" jdbcType="BIGINT" property="constructId" />
    <result column="scheme_no" jdbcType="VARCHAR" property="schemeNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, sort, construct_category, construct_item, construct_code, construct_name, 
    unit_code, parent_sort, description, assit_spec, standard, source_of_standard, remarks, 
    status, create_time, version, predecessor_small_sort, construct_id, scheme_no
  </sql>
  <select id="selectByExample" parameterType="cn.thinkfree.database.model.ProjectSmallSchedulingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_base_small_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from project_base_small_scheduling
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from project_base_small_scheduling
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.thinkfree.database.model.ProjectSmallSchedulingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from project_base_small_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.thinkfree.database.model.ProjectSmallScheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into project_base_small_scheduling (id, company_id, sort, 
      construct_category, construct_item, construct_code, 
      construct_name, unit_code, parent_sort, 
      description, assit_spec, standard, 
      source_of_standard, remarks, status, 
      create_time, version, predecessor_small_sort, 
      construct_id, scheme_no)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{constructCategory,jdbcType=VARCHAR}, #{constructItem,jdbcType=VARCHAR}, #{constructCode,jdbcType=VARCHAR}, 
      #{constructName,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, #{parentSort,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{assitSpec,jdbcType=VARCHAR}, #{standard,jdbcType=VARCHAR}, 
      #{sourceOfStandard,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, #{predecessorSmallSort,jdbcType=INTEGER}, 
      #{constructId,jdbcType=BIGINT}, #{schemeNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.thinkfree.database.model.ProjectSmallScheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into project_base_small_scheduling
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="constructCategory != null">
        construct_category,
      </if>
      <if test="constructItem != null">
        construct_item,
      </if>
      <if test="constructCode != null">
        construct_code,
      </if>
      <if test="constructName != null">
        construct_name,
      </if>
      <if test="unitCode != null">
        unit_code,
      </if>
      <if test="parentSort != null">
        parent_sort,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="assitSpec != null">
        assit_spec,
      </if>
      <if test="standard != null">
        standard,
      </if>
      <if test="sourceOfStandard != null">
        source_of_standard,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="predecessorSmallSort != null">
        predecessor_small_sort,
      </if>
      <if test="constructId != null">
        construct_id,
      </if>
      <if test="schemeNo != null">
        scheme_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="constructCategory != null">
        #{constructCategory,jdbcType=VARCHAR},
      </if>
      <if test="constructItem != null">
        #{constructItem,jdbcType=VARCHAR},
      </if>
      <if test="constructCode != null">
        #{constructCode,jdbcType=VARCHAR},
      </if>
      <if test="constructName != null">
        #{constructName,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="parentSort != null">
        #{parentSort,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="assitSpec != null">
        #{assitSpec,jdbcType=VARCHAR},
      </if>
      <if test="standard != null">
        #{standard,jdbcType=VARCHAR},
      </if>
      <if test="sourceOfStandard != null">
        #{sourceOfStandard,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="predecessorSmallSort != null">
        #{predecessorSmallSort,jdbcType=INTEGER},
      </if>
      <if test="constructId != null">
        #{constructId,jdbcType=BIGINT},
      </if>
      <if test="schemeNo != null">
        #{schemeNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.thinkfree.database.model.ProjectSmallSchedulingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from project_base_small_scheduling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_base_small_scheduling
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.constructCategory != null">
        construct_category = #{record.constructCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.constructItem != null">
        construct_item = #{record.constructItem,jdbcType=VARCHAR},
      </if>
      <if test="record.constructCode != null">
        construct_code = #{record.constructCode,jdbcType=VARCHAR},
      </if>
      <if test="record.constructName != null">
        construct_name = #{record.constructName,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCode != null">
        unit_code = #{record.unitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentSort != null">
        parent_sort = #{record.parentSort,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.assitSpec != null">
        assit_spec = #{record.assitSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.standard != null">
        standard = #{record.standard,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceOfStandard != null">
        source_of_standard = #{record.sourceOfStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.predecessorSmallSort != null">
        predecessor_small_sort = #{record.predecessorSmallSort,jdbcType=INTEGER},
      </if>
      <if test="record.constructId != null">
        construct_id = #{record.constructId,jdbcType=BIGINT},
      </if>
      <if test="record.schemeNo != null">
        scheme_no = #{record.schemeNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_base_small_scheduling
    set id = #{record.id,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      construct_category = #{record.constructCategory,jdbcType=VARCHAR},
      construct_item = #{record.constructItem,jdbcType=VARCHAR},
      construct_code = #{record.constructCode,jdbcType=VARCHAR},
      construct_name = #{record.constructName,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      parent_sort = #{record.parentSort,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      assit_spec = #{record.assitSpec,jdbcType=VARCHAR},
      standard = #{record.standard,jdbcType=VARCHAR},
      source_of_standard = #{record.sourceOfStandard,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      predecessor_small_sort = #{record.predecessorSmallSort,jdbcType=INTEGER},
      construct_id = #{record.constructId,jdbcType=BIGINT},
      scheme_no = #{record.schemeNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.thinkfree.database.model.ProjectSmallScheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_base_small_scheduling
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="constructCategory != null">
        construct_category = #{constructCategory,jdbcType=VARCHAR},
      </if>
      <if test="constructItem != null">
        construct_item = #{constructItem,jdbcType=VARCHAR},
      </if>
      <if test="constructCode != null">
        construct_code = #{constructCode,jdbcType=VARCHAR},
      </if>
      <if test="constructName != null">
        construct_name = #{constructName,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="parentSort != null">
        parent_sort = #{parentSort,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="assitSpec != null">
        assit_spec = #{assitSpec,jdbcType=VARCHAR},
      </if>
      <if test="standard != null">
        standard = #{standard,jdbcType=VARCHAR},
      </if>
      <if test="sourceOfStandard != null">
        source_of_standard = #{sourceOfStandard,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="predecessorSmallSort != null">
        predecessor_small_sort = #{predecessorSmallSort,jdbcType=INTEGER},
      </if>
      <if test="constructId != null">
        construct_id = #{constructId,jdbcType=BIGINT},
      </if>
      <if test="schemeNo != null">
        scheme_no = #{schemeNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.thinkfree.database.model.ProjectSmallScheduling">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_base_small_scheduling
    set company_id = #{companyId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      construct_category = #{constructCategory,jdbcType=VARCHAR},
      construct_item = #{constructItem,jdbcType=VARCHAR},
      construct_code = #{constructCode,jdbcType=VARCHAR},
      construct_name = #{constructName,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      parent_sort = #{parentSort,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      assit_spec = #{assitSpec,jdbcType=VARCHAR},
      standard = #{standard,jdbcType=VARCHAR},
      source_of_standard = #{sourceOfStandard,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      predecessor_small_sort = #{predecessorSmallSort,jdbcType=INTEGER},
      construct_id = #{constructId,jdbcType=BIGINT},
      scheme_no = #{schemeNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByStatus" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM project_base_small_scheduling WHERE status = #{status}
  </select>
</mapper>