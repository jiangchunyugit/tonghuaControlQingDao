<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.thinkfree.database.mapper.ApprovalCheckDataMapper">
  <resultMap id="BaseResultMap" type="cn.thinkfree.database.model.ApprovalCheckData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="approval_flow_node_num" jdbcType="VARCHAR" property="approvalFlowNodeNum" />
    <result column="check_num" jdbcType="VARCHAR" property="checkNum" />
    <result column="check_state_num" jdbcType="VARCHAR" property="checkStateNum" />
    <result column="check_state_name" jdbcType="VARCHAR" property="checkStateName" />
    <result column="count_num" jdbcType="VARCHAR" property="countNum" />
    <result column="create_log_num" jdbcType="VARCHAR" property="createLogNum" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="not_check_num" jdbcType="VARCHAR" property="notCheckNum" />
    <result column="pass_state" jdbcType="INTEGER" property="passState" />
    <result column="project_no" jdbcType="VARCHAR" property="projectNo" />
    <result column="rectification_num" jdbcType="VARCHAR" property="rectificationNum" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, approval_flow_node_num, check_num, check_state_num, check_state_name, count_num, 
    create_log_num, create_time, not_check_num, pass_state, project_no, rectification_num, 
    remark, type, user_id, user_name
  </sql>
  <select id="selectByExample" parameterType="cn.thinkfree.database.model.ApprovalCheckDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from approval_check_data_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from approval_check_data_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approval_check_data_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.thinkfree.database.model.ApprovalCheckDataExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approval_check_data_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.thinkfree.database.model.ApprovalCheckData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approval_check_data_log (id, approval_flow_node_num, check_num, 
      check_state_num, check_state_name, count_num, 
      create_log_num, create_time, not_check_num, 
      pass_state, project_no, rectification_num, 
      remark, type, user_id, 
      user_name)
    values (#{id,jdbcType=INTEGER}, #{approvalFlowNodeNum,jdbcType=VARCHAR}, #{checkNum,jdbcType=VARCHAR}, 
      #{checkStateNum,jdbcType=VARCHAR}, #{checkStateName,jdbcType=VARCHAR}, #{countNum,jdbcType=VARCHAR}, 
      #{createLogNum,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{notCheckNum,jdbcType=VARCHAR}, 
      #{passState,jdbcType=INTEGER}, #{projectNo,jdbcType=VARCHAR}, #{rectificationNum,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.thinkfree.database.model.ApprovalCheckData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approval_check_data_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="approvalFlowNodeNum != null">
        approval_flow_node_num,
      </if>
      <if test="checkNum != null">
        check_num,
      </if>
      <if test="checkStateNum != null">
        check_state_num,
      </if>
      <if test="checkStateName != null">
        check_state_name,
      </if>
      <if test="countNum != null">
        count_num,
      </if>
      <if test="createLogNum != null">
        create_log_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="notCheckNum != null">
        not_check_num,
      </if>
      <if test="passState != null">
        pass_state,
      </if>
      <if test="projectNo != null">
        project_no,
      </if>
      <if test="rectificationNum != null">
        rectification_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="approvalFlowNodeNum != null">
        #{approvalFlowNodeNum,jdbcType=VARCHAR},
      </if>
      <if test="checkNum != null">
        #{checkNum,jdbcType=VARCHAR},
      </if>
      <if test="checkStateNum != null">
        #{checkStateNum,jdbcType=VARCHAR},
      </if>
      <if test="checkStateName != null">
        #{checkStateName,jdbcType=VARCHAR},
      </if>
      <if test="countNum != null">
        #{countNum,jdbcType=VARCHAR},
      </if>
      <if test="createLogNum != null">
        #{createLogNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="notCheckNum != null">
        #{notCheckNum,jdbcType=VARCHAR},
      </if>
      <if test="passState != null">
        #{passState,jdbcType=INTEGER},
      </if>
      <if test="projectNo != null">
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="rectificationNum != null">
        #{rectificationNum,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.thinkfree.database.model.ApprovalCheckDataExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from approval_check_data_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_check_data_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.approvalFlowNodeNum != null">
        approval_flow_node_num = #{record.approvalFlowNodeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkNum != null">
        check_num = #{record.checkNum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStateNum != null">
        check_state_num = #{record.checkStateNum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStateName != null">
        check_state_name = #{record.checkStateName,jdbcType=VARCHAR},
      </if>
      <if test="record.countNum != null">
        count_num = #{record.countNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createLogNum != null">
        create_log_num = #{record.createLogNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.notCheckNum != null">
        not_check_num = #{record.notCheckNum,jdbcType=VARCHAR},
      </if>
      <if test="record.passState != null">
        pass_state = #{record.passState,jdbcType=INTEGER},
      </if>
      <if test="record.projectNo != null">
        project_no = #{record.projectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.rectificationNum != null">
        rectification_num = #{record.rectificationNum,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_check_data_log
    set id = #{record.id,jdbcType=INTEGER},
      approval_flow_node_num = #{record.approvalFlowNodeNum,jdbcType=VARCHAR},
      check_num = #{record.checkNum,jdbcType=VARCHAR},
      check_state_num = #{record.checkStateNum,jdbcType=VARCHAR},
      check_state_name = #{record.checkStateName,jdbcType=VARCHAR},
      count_num = #{record.countNum,jdbcType=VARCHAR},
      create_log_num = #{record.createLogNum,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      not_check_num = #{record.notCheckNum,jdbcType=VARCHAR},
      pass_state = #{record.passState,jdbcType=INTEGER},
      project_no = #{record.projectNo,jdbcType=VARCHAR},
      rectification_num = #{record.rectificationNum,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.thinkfree.database.model.ApprovalCheckData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_check_data_log
    <set>
      <if test="approvalFlowNodeNum != null">
        approval_flow_node_num = #{approvalFlowNodeNum,jdbcType=VARCHAR},
      </if>
      <if test="checkNum != null">
        check_num = #{checkNum,jdbcType=VARCHAR},
      </if>
      <if test="checkStateNum != null">
        check_state_num = #{checkStateNum,jdbcType=VARCHAR},
      </if>
      <if test="checkStateName != null">
        check_state_name = #{checkStateName,jdbcType=VARCHAR},
      </if>
      <if test="countNum != null">
        count_num = #{countNum,jdbcType=VARCHAR},
      </if>
      <if test="createLogNum != null">
        create_log_num = #{createLogNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="notCheckNum != null">
        not_check_num = #{notCheckNum,jdbcType=VARCHAR},
      </if>
      <if test="passState != null">
        pass_state = #{passState,jdbcType=INTEGER},
      </if>
      <if test="projectNo != null">
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="rectificationNum != null">
        rectification_num = #{rectificationNum,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.thinkfree.database.model.ApprovalCheckData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approval_check_data_log
    set approval_flow_node_num = #{approvalFlowNodeNum,jdbcType=VARCHAR},
      check_num = #{checkNum,jdbcType=VARCHAR},
      check_state_num = #{checkStateNum,jdbcType=VARCHAR},
      check_state_name = #{checkStateName,jdbcType=VARCHAR},
      count_num = #{countNum,jdbcType=VARCHAR},
      create_log_num = #{createLogNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      not_check_num = #{notCheckNum,jdbcType=VARCHAR},
      pass_state = #{passState,jdbcType=INTEGER},
      project_no = #{projectNo,jdbcType=VARCHAR},
      rectification_num = #{rectificationNum,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>