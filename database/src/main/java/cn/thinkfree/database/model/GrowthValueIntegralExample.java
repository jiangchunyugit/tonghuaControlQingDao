package cn.thinkfree.database.model;

import java.util.ArrayList;
import java.util.List;

public class GrowthValueIntegralExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public GrowthValueIntegralExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("sort is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("sort is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Integer value) {
            addCriterion("sort =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Integer value) {
            addCriterion("sort <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Integer value) {
            addCriterion("sort >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Integer value) {
            addCriterion("sort <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Integer value) {
            addCriterion("sort <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Integer> values) {
            addCriterion("sort in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Integer> values) {
            addCriterion("sort not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Integer value1, Integer value2) {
            addCriterion("sort between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Integer value1, Integer value2) {
            addCriterion("sort not between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andTaskNoIsNull() {
            addCriterion("task_no is null");
            return (Criteria) this;
        }

        public Criteria andTaskNoIsNotNull() {
            addCriterion("task_no is not null");
            return (Criteria) this;
        }

        public Criteria andTaskNoEqualTo(String value) {
            addCriterion("task_no =", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoNotEqualTo(String value) {
            addCriterion("task_no <>", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoGreaterThan(String value) {
            addCriterion("task_no >", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoGreaterThanOrEqualTo(String value) {
            addCriterion("task_no >=", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoLessThan(String value) {
            addCriterion("task_no <", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoLessThanOrEqualTo(String value) {
            addCriterion("task_no <=", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoLike(String value) {
            addCriterion("task_no like", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoNotLike(String value) {
            addCriterion("task_no not like", value, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoIn(List<String> values) {
            addCriterion("task_no in", values, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoNotIn(List<String> values) {
            addCriterion("task_no not in", values, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoBetween(String value1, String value2) {
            addCriterion("task_no between", value1, value2, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskNoNotBetween(String value1, String value2) {
            addCriterion("task_no not between", value1, value2, "taskNo");
            return (Criteria) this;
        }

        public Criteria andTaskDetailIsNull() {
            addCriterion("task_detail is null");
            return (Criteria) this;
        }

        public Criteria andTaskDetailIsNotNull() {
            addCriterion("task_detail is not null");
            return (Criteria) this;
        }

        public Criteria andTaskDetailEqualTo(String value) {
            addCriterion("task_detail =", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailNotEqualTo(String value) {
            addCriterion("task_detail <>", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailGreaterThan(String value) {
            addCriterion("task_detail >", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailGreaterThanOrEqualTo(String value) {
            addCriterion("task_detail >=", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailLessThan(String value) {
            addCriterion("task_detail <", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailLessThanOrEqualTo(String value) {
            addCriterion("task_detail <=", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailLike(String value) {
            addCriterion("task_detail like", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailNotLike(String value) {
            addCriterion("task_detail not like", value, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailIn(List<String> values) {
            addCriterion("task_detail in", values, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailNotIn(List<String> values) {
            addCriterion("task_detail not in", values, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailBetween(String value1, String value2) {
            addCriterion("task_detail between", value1, value2, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andTaskDetailNotBetween(String value1, String value2) {
            addCriterion("task_detail not between", value1, value2, "taskDetail");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardIsNull() {
            addCriterion("growth_value_award is null");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardIsNotNull() {
            addCriterion("growth_value_award is not null");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardEqualTo(Integer value) {
            addCriterion("growth_value_award =", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardNotEqualTo(Integer value) {
            addCriterion("growth_value_award <>", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardGreaterThan(Integer value) {
            addCriterion("growth_value_award >", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardGreaterThanOrEqualTo(Integer value) {
            addCriterion("growth_value_award >=", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardLessThan(Integer value) {
            addCriterion("growth_value_award <", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardLessThanOrEqualTo(Integer value) {
            addCriterion("growth_value_award <=", value, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardIn(List<Integer> values) {
            addCriterion("growth_value_award in", values, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardNotIn(List<Integer> values) {
            addCriterion("growth_value_award not in", values, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardBetween(Integer value1, Integer value2) {
            addCriterion("growth_value_award between", value1, value2, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andGrowthValueAwardNotBetween(Integer value1, Integer value2) {
            addCriterion("growth_value_award not between", value1, value2, "growthValueAward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardIsNull() {
            addCriterion("integral_reward is null");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardIsNotNull() {
            addCriterion("integral_reward is not null");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardEqualTo(Integer value) {
            addCriterion("integral_reward =", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardNotEqualTo(Integer value) {
            addCriterion("integral_reward <>", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardGreaterThan(Integer value) {
            addCriterion("integral_reward >", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardGreaterThanOrEqualTo(Integer value) {
            addCriterion("integral_reward >=", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardLessThan(Integer value) {
            addCriterion("integral_reward <", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardLessThanOrEqualTo(Integer value) {
            addCriterion("integral_reward <=", value, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardIn(List<Integer> values) {
            addCriterion("integral_reward in", values, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardNotIn(List<Integer> values) {
            addCriterion("integral_reward not in", values, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardBetween(Integer value1, Integer value2) {
            addCriterion("integral_reward between", value1, value2, "integralReward");
            return (Criteria) this;
        }

        public Criteria andIntegralRewardNotBetween(Integer value1, Integer value2) {
            addCriterion("integral_reward not between", value1, value2, "integralReward");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table growth_value_integral
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table growth_value_integral
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}