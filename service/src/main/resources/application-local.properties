# Tomcat => Undertow
server.servlet.context-path=/
server.port=7181

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.thymeleaf.prefix=classpath:/templates/
spring.resources.static-locations=classpath:/static/

logging.level.cn.tonghua.database.mapper=DEBUG
# JDBC
spring.datasource.url=jdbc:mysql://localhost:3306/qingdao?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#  &serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#server.tomcat.basedir=/home/wwwroot/designer
custom.userService.useCache=false

#开启swagger配置
custom.config.openSwagger=true

#本地资源目录（文件上传下载）
server.file.uploadDir=d://upload/
custom.file.publicURL=

# Mybatis
mybatis.type-aliases-package=cn.tonghua.database.model
#mybatis.type-handlers-package=cn.tonghua.database.cn.tonghua.database.mapper
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30
mybatis.mapperLocations=classpath:cn/tonghua/database/mapper/*Mapper.xml

pdf.template-dir=classpath:/templates/approvalFlow
pdf.export-dir=/tmp/uploadfile
pdf.font-dir=/data/font/

custom.cloud.fileUpload=
custom.cloud.fileUpload.dir=d://data/dir/

redis
spring.redis.database=6
spring.redis.host=127.0.0.1
spring.redis.port=6379
#spring.redis.password=sjj@010203
spring.redis.jedis.pool.max-active=40
spring.redis.jedis.pool..max-wait=100
spring.redis.jedis.pool..max-idle=20
spring.redis.jedis.pool..min-idle=20
spring.redis.timeout=3000s

#ftp
#ftp地址-ftp请求。ftp://192.168.3.127:22
ftp.host=192.168.2.149
#ftp端口号
ftp.port=21
#ftp请求的用户名
ftp.username=anonymous
#ftp请求的密码
ftp.password=
#ftp请求读取写入的文件路径
ftp.filepath=/
#http请求路径。http://192.168.3.127:82
ftp.web.host=192.168.3.127
ftp.web.port=82

#本地ftp地址用于保存在ftp服务器上下载的资源同时给多媒体了展项提供资源
ftp.local.path=D:\\ftpserver\\



#默认或是自己改名字都行
spring.quartz.properties.org.quartz.scheduler.instanceName: DefaultQuartzScheduler
#如果使用集群，instanceId必须唯一，设置成AUTO
spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO


spring.quartz.properties.org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount: 10
spring.quartz.properties.org.quartz.threadPool.threadPriority: 5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true


#存储方式使用JobStoreTX，也就是数据库
spring.quartz.properties.org.quartz.jobStore.class:org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#是否使用集群（如果项目只部署到 一台服务器，就不用了）
spring.quartz.properties.org.quartz.jobStore.isClustered = false
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=20000
spring.quartz.properties.org.quartz.jobStore.tablePrefix = qrtz_
spring.quartz.properties.org.quartz.jobStore.useProperties=true
spring.quartz.job-store-type=jdbc
#配置数据源
#数据库中quartz表的表名前缀


